
Leetcode Link - https://leetcode.com/problems/longest-valid-parentheses/

1) Using Stack -

class Solution{
public:
    int maxLength(string S){
        int ans=0;
        stack<int> st;
        st.push(-1);
        for(int i=0;i<S.size();i++){
            if(S[i]=='('){
                st.push(i);
            }
            else{
                st.pop();
                if(st.empty()){
                    st.push(i);
                }
                else{
                    ans=max(ans,i-st.top());
                }
            }
        }
      return ans;    
    }
};

2) Without Stack - 

class Solution{
public:
    int maxLength(string S){
        int ans=0,l=0,r=0;
        for(int i=0;i<S.size();i++){
            if(S[i]=='('){
                l++;
            }
            else{
                r++;
            }
            
            if(l==r){
                ans=max(ans,2*r);
            }
            else if(r>l){
                l=r=0;
            }
        }
        
        l=0,r=0;
        for(int i=S.size()-1;i>=0;i--){
            if(S[i]==')'){
                r++;
            }
            else{
                l++;
            }
            
            if(l==r){
                ans=max(ans,2*l);
            }
            else if(l>r){
                l=r=0;
            }
        }
      return ans;    
    }
};
